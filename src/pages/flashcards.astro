---
import IOMenu from "../components/IOMenu.astro";
import Layout from "../layouts/Layout.astro";
import Flashcard from "../components/Flashcard.jsx";

const code = `void a_function () {
	// a function's body
	// very important and
	// veeeeeeeeeeeeeeeee
	// eeeeeeeeeeeeeeeeee
	// eeeeeeeeeeeeeeeeee
	// eeeeeeeeeeeeeeeeee
	// eeeeeeeeeeeeeeeeee
	// eeeeeeeeeeeeeeeeee
	// eeeeeeeeeeeeeeeeee
	// eeeeeeeeeeeeeeeeee
	// eeeeeeeeeeeeeeeeee
	// eeeeeeeeeeeeeeeeee
	// eeeeeeeeeeeeeeeeee
	// eeeeeeeeeeeeeeeeee
	// eeeeeeeeeeeeeeeeee
	// eeeeeeeeeeeeeeeeee
	// eeeeeeeeeeeeeeeeee
	// eeeeeeeeeeeeeeeeee
	// eeeeeeeeeeeeeeeery
	// long
}
`;
---

<Layout title="CRUD Flashcards">
	<main class="w-full px-6 flex flex-col items-center mb-24">
		<h1 class="text-4xl font-bold my-4 text-slate-200">
			Create a new card here
		</h1>
		<textarea
			name="card"
			id="card"
			placeholder="Card JSON here..."
			class="p-4 w-full min-h-64 my-8"></textarea>
		<button
			id="create-card"
			class="mb-24 rounded-full font-semibold text-lg tracking-wide block py-3 px-6 text-slate-200 bg-slate-800 hover:bg-slate-700"
		>
			Create
		</button>
		<section id="cards-container"></section>
		<Flashcard
			client:load
			front="what is this"
			back="Lorem ipsum dolor sit amet consectetur adipisicing elit. Enim similique rerum quod totam dignissimos doloremque repudiandae nemo vero nesciunt, omnis vel atque suscipit quo architecto id dolores at explicabo et? Lorem ipsum dolor sit amet consectetur adipisicing elit. Enim similique rerum quod totam dignissimos doloremque repudiandae nemo vero nesciunt, omnis vel atque."
			type="text"
		/>
		<Flashcard
			client:load
			front="what is this"
			back="https://imgs.search.brave.com/kDZHOjm08CKCivcy_SfFWDLS01PUCByPfdOHvpZlt1I/rs:fit:860:0:0/g:ce/aHR0cHM6Ly93YWxs/cGFwZXJjYXZlLmNv/bS93cC93cDIzOTM2/ODIuanBn"
			type="image"
		/>
		<Flashcard
			client:load
			front="what is this"
			back=""
			type="image"
		/>
		<Flashcard client:load front="what is this" back={code} type="code" />
		<IOMenu />
	</main>
</Layout>

<script>
	// SHOW CARDS
	const cardsContainer = document.getElementById("cards-container");

	function showCards() {
		let cards = [];

		try {
			// If null (not there), set to empty array
			cards = JSON.parse(localStorage.getItem("cards")) ?? [];
		} catch {
			cards = [];
		}

		// TODO
		// Until flashcard component created, just show it as text.
		cardsContainer.innerText = JSON.stringify(cards);
	}

	showCards();

	// CREATE CARD
	const createCardBtn = document.getElementById("create-card");

	function addCardToList() {
		const cardText = document.getElementById("card") as HTMLInputElement;
		let cards = [];

		try {
			// If null (not there), set to empty array
			cards = JSON.parse(localStorage.getItem("cards")) ?? [];
		} catch {
			cards = [];
		}

		// TODO
		// add json schema validation
		if (cardText.value && cardText.value.localeCompare("") !== 0)
			cards.push(cardText.value);

		localStorage.setItem("cards", JSON.stringify(cards));
		showCards();
	}

	createCardBtn.addEventListener("click", addCardToList);
</script>
